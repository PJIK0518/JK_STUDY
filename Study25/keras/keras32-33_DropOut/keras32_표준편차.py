import numpy as np
from sklearn.preprocessing import StandardScaler

#1. 데이터
data = np.array([[ 1, 2, 3,  1],
                 [ 4, 5, 6,  2],
                 [ 7, 8, 9,  3],
                 [10,11,12,114],
                 [13,14,15,115],
                 ])

# print(data.shape) (5, 4)

#1) 평균
means = np.mean(data, axis=0)
# print('평균 : ', means) 평균 :  [ 7.  8.  9. 47.]
""" means = np.mean(data, axis=1)
print('평균 : ', means) 평균 :  [ 1.75  4.25  6.75 36.75 39.25] """

#2) 모집단 분산 (n으로 나눈다)
population_variances = np.var(data, axis=0)
# print('모집단 분산 : ',population_variances) 모집단 분산 :  [  18.   18.   18. 3038.]

#3) 표본 분산 (n-1로 나눈다), 큰 모집단에서 표본집단 여러 개를 뽑아서 각 표본 분산의 평균으로 사용
variance = np.var(data, axis=0, ddof=1) # ddof : 1개 제외하고 나눌것이다 = 1/(n-1)
# print('표본분산 : ', variance)  [  22.5   22.5   22.5 3797.5]
# 한 표본집단에 대해서만 하면 크게 나오지만, 여러 표본집단의 평균은 비슷하거나 작게 나옴

#4) 표본 표준편차
std1 = np.std(data, axis=0, ddof=1)
# print('표본 표준편차 :', std1) [ 4.74341649  4.74341649  4.74341649 61.62385902]

#5) 모집단 표준편차
std2 = np.std(data, axis=0)
# print('모집단 표준편차 :', std1) [ 4.24264069  4.24264069  4.24264069 55.11805512]
# print('모집단 표준편차 :', std1) [ 4.24264069  4.24264069  4.24264069 55.11805512]

#6) StandardScaler : 표편1 평균0 = (x-mean)/std
SC = StandardScaler()
S_data = SC.fit_transform(data)
""" print('StandardScaler : \n', S_data) \n : python 언어! 다음 줄로 넘김
[[-1.41421356 -1.41421356 -1.41421356 -0.83457226]
 [-0.70710678 -0.70710678 -0.70710678 -0.81642939]
 [ 0.          0.          0.         -0.79828651]
 [ 0.70710678  0.70710678  0.70710678  1.21557264]
 [ 1.41421356  1.41421356  1.41421356  1.23371552]]
"""

##) StandardScaler : 직접 구현
SS_data = (data - means)/std2
""" print(SS_data)
[[-1.41421356 -1.41421356 -1.41421356 -0.83457226]
 [-0.70710678 -0.70710678 -0.70710678 -0.81642939]
 [ 0.          0.          0.         -0.79828651]
 [ 0.70710678  0.70710678  0.70710678  1.21557264]
 [ 1.41421356  1.41421356  1.41421356  1.23371552]]
"""